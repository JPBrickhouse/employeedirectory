{"version":3,"sources":["employees.js","components/Wrapper/index.js","components/EmployeeCard/index.js","components/DropdownOption/index.js","App.js","index.js"],"names":["employees","firstName","lastName","department","role","hireYear","employeeNumber","screenshot","Wrapper","props","className","children","EmployeeCard","alt","employeeInfo","src","process","dropdownOption","value","option","firstFilterContent","Object","keys","filter","element","App","state","listOfEmployees","firstFilterDropdown","firstFilterSelected","secondFilterDropdown","secondFilterSelected","listOfEmployeesDisplayed","firstFilterChange","event","setState","target","secondFilterContent","dropdownContent","forEach","push","dropdownNoDuplicates","Set","secondFilterChange","employeesToDisplay","firstFilter","secondFilter","filteredEmployees","this","onChange","defaultValue","map","DropdownOption","employee","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9826c31a.chunk.js","sourcesContent":["const employees = [\n    {\n        firstName: \"Mickey\",\n        lastName: \"Mouse\",\n        department: \"Executive\",\n        role: \"CEO\",\n        hireYear: \"1928\",\n        employeeNumber: 1,\n        screenshot: \"/images/mickeyMouse.png\"\n    },\n    {\n        firstName: \"Minnie\",\n        lastName: \"Mouse\",\n        department: \"Executive\",\n        role: \"CFO\",\n        hireYear: \"1928\",\n        employeeNumber: 2,\n        screenshot: \"/images/minnieMouse.png\"\n    },\n    {\n        firstName: \"Pluto\",\n        lastName: \"The Pup\",\n        department: \"Operations\",\n        role: \"Minister of Happiness\",\n        hireYear: \"1930\",\n        employeeNumber: 3,\n        screenshot: \"/images/pluto.png\"\n    },\n    {\n        firstName: \"Donald\",\n        lastName: \"Duck\",\n        department: \"Parks\",\n        role: \"Ride Development\",\n        hireYear: \"1934\",\n        employeeNumber: 4,\n        screenshot: \"/images/donaldDuck.png\"\n    },\n    {\n        firstName: \"Goofy\",\n        lastName: \"Geef\",\n        department: \"Parks\",\n        role: \"Live Show Development\",\n        hireYear: \"1932\",\n        employeeNumber: 5,\n        screenshot: \"/images/goofy.png\"\n    },\n    {\n        firstName: \"Doc\",\n        lastName: \"The Dwarf\",\n        department: \"Operations\",\n        role: \"Mining\",\n        hireYear: \"1937\",\n        employeeNumber: 6,\n        screenshot: \"/images/docDwarf.png\"\n    },\n    {\n        firstName: \"Oswald\",\n        lastName: \"The Lucky Rabbit\",\n        department: \"Executive\",\n        role: \"Emeritus Exec\",\n        hireYear: \"1927\",\n        employeeNumber: 7,\n        screenshot: \"/images/oswald.png\"\n    },\n    {\n        firstName: \"Mulan\",\n        lastName: \"Fa\",\n        department: \"Princess\",\n        role: \"Combat\",\n        hireYear: \"1998\",\n        employeeNumber: 8,\n        screenshot: \"/images/mulan.png\"\n    },\n    {\n        firstName: \"Merida\",\n        lastName: \"DunBroch\",\n        department: \"Princess\",\n        role: \"Combat\",\n        hireYear: \"2012\",\n        employeeNumber: 9,\n        screenshot: \"/images/merida.jpg\"\n    },\n    {\n        firstName: \"Dopey\",\n        lastName: \"The Dwarf\",\n        department: \"Parks\",\n        role: \"Silent Comedian\",\n        hireYear: \"1937\",\n        employeeNumber: 10,\n        screenshot: \"/images/dopey.jpg\"\n    }\n];\n\nexport default employees;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n// NOTES regarding the IMAGES:\n// - Using the public folder to source images:\n// - https://create-react-app.dev/docs/using-the-public-folder/\n// - However, the typical approach is usually as follows:\n// - https://create-react-app.dev/docs/adding-images-fonts-and-files/\n\nfunction EmployeeCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.employeeInfo.firstName} src={process.env.PUBLIC_URL + props.employeeInfo.screenshot} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.employeeInfo.firstName + \" \" + props.employeeInfo.lastName}\n          </li>\n          <li>\n            <strong>Department:</strong> {props.employeeInfo.department}\n          </li>\n          <li>\n            <strong>Role:</strong> {props.employeeInfo.role}\n          </li>\n          <li>\n            <strong>Hire Year:</strong> {props.employeeInfo.hireYear}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default EmployeeCard;\n","import React from \"react\";\n\nfunction dropdownOption(props) {\n    return (\n        <option value={props.option}>{props.option}</option>\n    )\n}\n\nexport default dropdownOption;","// Importing react and component\nimport React, { Component } from \"react\";\n// Importing the employees.js file (which contains all the employees in the directory)\nimport employees from \"./employees\"\n// Importing the various components\nimport Wrapper from \"./components/Wrapper\";\nimport EmployeeCard from \"./components/EmployeeCard\"\nimport DropdownOption from \"./components/DropdownOption\"\n\n\n// Getting the keys of each object in the employees directory\n// - Object.keys returns an array of the keys from the object employees[0]\n// - filter creates a new array with all the elements in an array that pass the test implemeneted\n// - The test in question returns true if the element is not \"screenshot\" or \"employeeNumber\"\nvar firstFilterContent = (Object.keys(employees[0])).filter(element => {\n  return (element !== \"screenshot\" && element !== \"employeeNumber\")\n})\n\n// The function App has been converted to a class component\nclass App extends Component {\n\n  // Initial state of everything\n  state = {\n    listOfEmployees: employees,\n    firstFilterDropdown: firstFilterContent,\n    firstFilterSelected: '',\n    secondFilterDropdown: [],\n    secondFilterSelected: '',\n    listOfEmployeesDisplayed: employees\n  }\n\n  // ===============================================================================================\n  // Using arrows function because...\n  // When you pass a function to another function (as a callback),\n  // \"this\" will be a reference to the context it is in when it is finally called,\n  // as opposed to what it is when you wrote it.\n  // If you use an arrow function, it will keep the context it had when you wrote it.\n  // https://stackoverflow.com/questions/49600249/reactjs-cannot-read-property-setstate-of-undefined\n  // (Therefore, the \"this\" this.setState will refer to the setState method that exists\n  // in the overall App component, rather that \"this\" referring to the individual fucntion)\n  // ===============================================================================================\n\n  // An event listener for when the first filter changes\n  firstFilterChange = event => {\n    // setState is asynchronous\n    // As such, this.secondFilterContent is executed as a callback function which will run after the setState is complete\n    this.setState({ firstFilterSelected: event.target.value }, this.secondFilterContent)\n  }\n\n  // A method function that fills the content of the second filter\n  secondFilterContent = () => {\n    // If this.state.firstFilterSelected is select\n    // - empty the secondFilterDropdown, because there is nothing to filter\n    // - display all the employees, because nothing has been filtered\n    if (this.state.firstFilterSelected === \"Select\") {\n      this.setState(\n        {\n          secondFilterDropdown: [],\n          listOfEmployeesDisplayed: employees\n        }\n      )\n    }\n    // Otherwise, generate the content to place into the secondFilterDropdown\n    else {\n      // Initializing an empty array to be used below\n      var dropdownContent = []\n\n      // Going through the listOfEmployees array, where each element is an object (containing employee data)\n      // this.state.firstFilterSelected corresponds to a selected value from the first filter's dropdown menu\n      // element[this.state.firstFilterSelected] gets the value associated with the key of this.state.firstFilterSelected in the element (an object)\n      this.state.listOfEmployees.forEach(element => {\n        dropdownContent.push(element[this.state.firstFilterSelected])\n      })\n\n      // Removing duplicates from the array: https://www.javascripttutorial.net/array/javascript-remove-duplicates-from-array/\n      var dropdownNoDuplicates = [...new Set(dropdownContent)]\n\n      // Setting the state of secondFilterDropdown (by passing it the array of dropdownNoDuplicates)\n      this.setState({ secondFilterDropdown: dropdownNoDuplicates })\n    }\n  }\n\n  // An event listener for when the second filter changes\n  secondFilterChange = event => {\n    // setState is asynchronous\n    // As such, this.employeesToDisplay is executed as a callback function which will run after the setState is complete\n    this.setState({ secondFilterSelected: event.target.value }, this.employeesToDisplay)\n  }\n\n  // A method function that determines which employees to display by filtering them by\n  // the criteria established in the first and second filters\n  employeesToDisplay = () => {\n    // Get the state values of the first and second filters\n    var firstFilter = this.state.firstFilterSelected\n    var secondFilter = this.state.secondFilterSelected\n\n    // filtering the employees by the values of the first and second filters\n    var filteredEmployees = this.state.listOfEmployees.filter(element => {\n      return element[firstFilter] === secondFilter\n    })\n\n    // Setting the state of the listOfEmployeesDisplayed\n    this.setState({ listOfEmployeesDisplayed: filteredEmployees })\n  }\n\n  // The render method will be called each time an update happens\n  render() {\n    return (\n      <div>\n        <h1>Employee Directory!</h1>\n\n        {/* First Filter */}\n        <p>Filter by</p>\n        <select value={this.state.firstFilterSelected} onChange={this.firstFilterChange}>\n          {/* Select appears initially when the page loads */}\n          <option defaultValue value=\"Select\">Select</option>\n          {/* The remaining dropdown values are generated by the elements in the array contained in this.state.firstFilterDropdown */}\n          {this.state.firstFilterDropdown.map(element => {\n            return <DropdownOption option={element} key={element} />;\n          })}\n        </select>\n\n        {/* Second Filter */}\n        <p>Select from that filter</p>\n        <select value={this.state.secondFilterSelected} onChange={this.secondFilterChange}>\n          {/* Select appears initially when the page loads */}\n          <option defaultValue value=\"Select\">Select</option>\n          {/* The dropdown values are generated by the elements in the array contained in this.state.secondFilterDropdown */}\n          {this.state.secondFilterDropdown.map(element => {\n            return <DropdownOption option={element} key={element} />;\n          })}\n        </select>\n\n        {/* Displaying all the employee cards */}\n        <Wrapper>\n          {this.state.listOfEmployeesDisplayed.map(employee => {\n            return <EmployeeCard employeeInfo={employee} key={employee.employeeNumber} />\n          })}\n        </Wrapper>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}